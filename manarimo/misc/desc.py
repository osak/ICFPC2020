data = """\
010111100
110100110
010110011
001001010
001111011
001001111
010100110
101100100
110111110
000111000
000100111
110011011
001110000
100100101
100000001
100100001
101011111
010010000
011111010
111001011
000000011
010011011
010100001
101000100
010001000
101011011
110100110
000110010
000001010
100101011
101011110
001101011
110001100
110101100
000000110
001011101
010110101
000110101
100101010
011110111
100100011
011011111
100100110
100011111
100111001
000001000
100110001
011111111
001011011
011010000
101101110
000010100
101000101
101010011
000111010
011001101
100111000
001010001
111001101
101111010
001110001
101010001
011000110
001011110
"""

data2 = """\
010111100
110100110
010110011
001001010
001111011
001001111
010100110
101100100
110111110
000111000
000100111
110011011
001110000
100100101
100000001
100100001
101011111
010010000
011111010
111001011
000000011
010011011
010100001
101000100
010001000
101011011
110100110
000110010
000001010
100101011
101011110
001101011
110001100
110101100
000000110
001011101
010110101
000110101
100101010
011110111
100100011
011011111
100100110
100011111
100111001
000001000
100110001
011111111
001011011
011010000
101101110
000010100
101000101
101010011
000111010
011001101
100111000
001010001
111001101
101111010
001110001
101010001
011000110
001011110
"""


from collections import Counter


def to_sq(s):
    return [list(s[:3]), list(s[3:6]), list(s[6:])]


def to_str(sq):
    return ''.join(''.join(c for c in r) for r in sq)


def rotate(s):
    res = []
    sq = to_sq(s)
    for _ in range(3):
        res.append([None] * 3)
    for r in range(3):
        for c in range(3):
            res[r][c] = sq[c][2-r]
    return to_str(res)


def flip(s):
    sq = to_sq(s)
    res = []
    for _ in range(3):
        res.append([None] * 3)
    for r in range(3):
        for c in range(3):
            res[r][c] = sq[r][2-c]
    return to_str(res)


def test(s, t):
    vflip_t = flip(t)
    hflip_t = flip(rotate(t))
    for _ in range(4):
        if s == t:
            return True
        elif s == vflip_t:
            return True
        elif s == hflip_t:
            return True
        s = flip(s)
    return False


def to_coord(i):
    return "({}, {})".format(i // 8, i % 8)


def main():
    ls = data.splitlines()
    ls2 = data2.splitlines()
    for i in range(64):
        for j in range(i):
            if test(ls[i], ls[j]):
                print(i, j, to_coord(i), to_coord(j))

    nums = []
    for r in range(8):
        for c in range(8):
            l = ls[r * 8 + c]
            print(r, c, l, int(l, 2))
            nums.append(int(l, 2))


if __name__ == '__main__':
    main()